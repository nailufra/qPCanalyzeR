your_frame$Samples[row] <- strsplit(your_frame$input_name[row],"@")[[1]][[1]]
your_frame$time_point[row] <- strsplit(your_frame$input_name[row],"@")[[1]][[2]]
biol_replicates <<- FALSE
is_time_exp <<- TRUE
}
plate_information <<- your_frame
}
for (i in 1:nrow(plate_information)){
checkInput(plate_information,i)
}
###removes all rows labelled with NA in "Gene"
plate_information <- plate_information[!is.na(plate_information$Gene),]
##tech_rep
plate_information <- plate_information %>%
group_by(Gene,Samples,time_point, biol_rep, Plate) %>%
mutate(tech_rep = row_number()) %>%
as.data.frame()
head(plate_information)
# 9) STATISTICS
#############################################################
calculate_statistics <- function(){
###calculate statistics
plate_information <<- plate_information %>%
group_by(Gene,Samples,time_point,biol_rep) %>%
mutate(ct_mean = mean(Ct, na.rm = TRUE),
ct_std_dev = sd(Ct, na.rm = TRUE),
ct_std_err = std.error(Ct, na.rm = TRUE)) %>%
as.data.frame()
#relExpression & dCT
plate_information <<- plate_information %>%
arrange(Gene) %>%
group_by(Gene) %>%
filter(used_in_analysis == TRUE) %>%
mutate(relative_expression = (2^(filter(., Gene == housekeeping_gene)$Ct) / 2^Ct) * 100,
relative_expression_mean = (2^(filter(., Gene == housekeeping_gene)$ct_mean) / 2^ct_mean) * 100,
dCt = Ct - filter(., Gene == housekeeping_gene)$Ct,
dct_mean = ct_mean - filter(., Gene == housekeeping_gene)$ct_mean) %>%
as.data.frame()
##2^-dCT
plate_information$log2_dCt <<- 2^-(plate_information$dCt)
##2^-ddCT
# if(!is_time_exp & !biol_replicates){
#   plate_information <<- plate_information %>%
#     group_by(Gene,biol_rep) %>%
#     mutate(ddCt_by_timepoint = dct_mean - dct_mean[Samples == comparator]) %>%
#     as.data.frame()
# }
#
# else if (is_time_exp){
#   plate_information <<- plate_information %>%
#     arrange(Gene) %>%
#     group_by(Gene,biol_rep,Samples) %>%
#     mutate(ddCt_by_timepoint = dct_mean - dct_mean[time_point == first_time_point]) %>%
#     as.data.frame()
# }
#
# else if(biol_replicates){
#   plate_information <<- plate_information %>%
#     group_by(Gene,biol_rep,Samples) %>%
#     mutate(ddCt_by_timepoint = dct_mean - dct_mean[Samples == comparator]) %>%
#     as.data.frame()
# }
if(is_time_exp){
plate_information <<- plate_information %>%
group_by(Gene, biol_rep, Samples) %>%
mutate(ddCt_by_timepoint = dct_mean - dct_mean[time_point == first_time_point]) %>%
as.data.frame()
plate_information$log2ddCt_by_timepoint <<- 2^-(plate_information$ddCt_by_timepoint)
}
plate_information <<- plate_information %>%
group_by(Gene, biol_rep) %>%
mutate(ddCt_by_samples = dct_mean - dct_mean[Samples == comparator]) %>%
as.data.frame()
plate_information$log2ddCt_by_sample <<- 2^-(plate_information$ddCt_by_sample)
### ddct_mean
#plate_information$log2ddCt_by_timepoint <<- 2^-(plate_information$ddCt_by_timepoint)
}
calculate_statistics()
###PLOTS
#arrange
plotting_frame <- plate_information %>%
filter(Gene != housekeeping_gene) %>%
as.data.frame()
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep)))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = Samples))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Gene,Samples)))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Gene,Samples)), linetype=Gene)}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Gene,Samples)), linetype=Gene)}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Gene,Samples), linetype=Gene))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Gene,Samples), linetype=Gene))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
p5 <- result_plot(plot_type = "ddCt", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
result_plot <- function(plot_type, biol_rep, time_point, facet){
#choose plot type
#relative expression
if(plot_type == "relExp"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Gene,Samples), linetype=Gene))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = relative_expression_mean , fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(paste("Relative Expression - (",housekeeping_gene," 100%)",sep=""))
}
#ddCt
else if(plot_type == "ddCt"){
if(!biol_rep & !time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = relative_expression_mean, color = Gene, group = Gene))}
}
else if(!time_point){
{p = ggplot(plotting_frame, aes(x = Samples, y = log2ddCt_by_sample, color = Gene, group=interaction(Gene, biol_rep), linetype=biol_rep))}
}
else if(!biol_rep){
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Gene,Samples), linetype=Gene))}
}
else{
{p = ggplot(plotting_frame, aes(x = time_point, y = log2ddCt_by_timepoint, fill = Samples, color = Samples, group = interaction(Samples, biol_rep), linetype=biol_rep))}
}
p = p + ylab(bquote('2'^-ΔΔCt))
}
#choose faceting
if(facet){
{p = p + facet_grid(Gene~Samples, scales = "free")}
}
p = p + geom_line(size= 1) +
geom_point(size = 3) +
ggtitle(paste(experiment_name)) +
theme(axis.text = element_text(size=7, color="black"),
plot.title = element_text(hjust = 0.5, size= 15),
legend.position = "right",
legend.title = element_text(size = 8),
panel.border = element_rect(color = "black", fill = NA, size = 1))
print(p)
}
p3 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p4 <- result_plot(plot_type = "relExp", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
p5 <- result_plot(plot_type = "ddCt", biol_rep = biol_replicates, time_point = is_time_exp, facet = TRUE)
p6 <- result_plot(plot_type = "ddCt", biol_rep = biol_replicates, time_point = is_time_exp, facet = FALSE)
